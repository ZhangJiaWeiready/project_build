//向外暴露一个函数module.exports = function (grunt) { // grunt对象    //1. 初始化插件配置    grunt.initConfig({        concat:{            options:{                separator:';' // 文件每段代码之间用分号隔开            },            dist:{ //任意名称                src:['src/js/*.js'],  //src - 名称不可更改 代表源文件路径                dest:'dist/js/built.js' //dest - 不可更改合并到哪里 和名字是什么            }        },        //压缩文件        uglify:{            my_target: {                files: {                    //压缩合并后的文件                    'dist/js/built.min.js': ['dist/js/built.js']                }            }        },        //压缩css文件        cssmin:{            target:{                files:{                    'dist/css/built.min.css':['src/css/*.css']                }            }        },        jshint:{            options:{                //是否允许忽略分号                'asi':true            },            //检查哪些js文件            all:['Gruntfile.js','src/js/*.js']        },        //监听        watch:{           scripts:{               //监视源文件 自动重新打包  ，每次重新刷新网页即可               files:['src/css/*.css','src/js/*.js',],               tasks:['jshint','concat','uglify','cssmin']           }        }    })    //2.加载插件包 后面是包名    grunt.loadNpmTasks('grunt-contrib-concat'); //合并js    grunt.loadNpmTasks('grunt-contrib-uglify'); //压缩js    grunt.loadNpmTasks('grunt-contrib-cssmin'); //压缩css    grunt.loadNpmTasks('grunt-contrib-jshint'); //检查js语法    grunt.loadNpmTasks('grunt-contrib-watch'); //监听自动化    // 3.注册任务，（待执行）    grunt.registerTask('default',['jshint','concat','uglify','cssmin'])    grunt.registerTask('watchTask',['default','watch'])    // run ...执行    //  默认会找default的任务}/** commonJs 向外暴露的是什么*   exports 默认值是一个空对象 {}*   module.exports =value*       暴露任意类型*   exports.xxx = value*       暴露对象** */